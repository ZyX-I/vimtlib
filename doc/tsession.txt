*tsession.txt*      tsession - An alternativ approach to sessions
                    Author: Thomas Link, micathom at gmail com


These functions provide a IMHO simpler alternative to vim's session 
handling. Filenames are stored as full names, which helps to avoid some 
problems, e.g. with autochangedir-like settings.

Other than vim's own |:mksession|, these commands will only restore 
the buffer list and the window layout. This script relies on filetype 
plugins etc. to re-establish the original keymaps, buffer-local 
settings etc. This may or may not be what you want.

Currently, the following won't be restored:
- Variables, options (but this can be configured)
- Tab pages

The session info is stored in: &runtimepath[0]/cache/sessions


-----------------------------------------------------------------------
Install~

Edit the vba file and type: >

    :so %

See :help vimball for details. If you have difficulties, please make 
sure, you have the current version of vimball (vimscript #1502) 
installed.

This script requires tlib (vimscript #1863) to be installed.


------------------------------------------------------------------------
Contents~
    plugin/tsession.vim
        g:tsession_save_global ........ |g:tsession_save_global|
        g:tsession_save_buf ........... |g:tsession_save_buf|
        g:tsession_save_win ........... |g:tsession_save_win|
        g:tsession_current ............ |g:tsession_current|
        g:tsession_register_special ... |g:tsession_register_special|
        g:tsession_swap ............... |g:tsession_swap|
        :SessionComplete .............. |:TSessionSave|
        :SessionComplete .............. |:TSessionLoad|
        :TSessionBrowse ............... |:TSessionBrowse|


------------------------------------------------------------------------
plugin/tsession.vim~

                                                    *g:tsession_save_global*
g:tsession_save_global         (default: ['&co', '&lines', '&go', '&fdc', '&fdl', '&fen'])
    The global options to store with session data.

                                                    *g:tsession_save_buf*
g:tsession_save_buf            (default: [])
    The buffer-local options to store with session data.

                                                    *g:tsession_save_win*
g:tsession_save_win            (default: ['&fdc', '&fdl', '&fen'])
    The window-local options to store with session data.

                                                    *g:tsession_current*
g:tsession_current             (default: 'vim')

                                                    *g:tsession_register_special*
g:tsession_register_special    (default: {'buftype': '', 'unlisted': 0, 'unloaded': 0})

                                                    *g:tsession_swap*
g:tsession_swap                (default: 0)
    When loading a session, hide buffers not in the current session.

                                                    *:TSessionSave*
TSessionSave [SESSION]

                                                    *:TSessionLoad*
TSessionLoad[!] [SESSION]
    With !, buffers not registered in the session will be deleted if 
    |g:tsession_swap| is false. If g:tsession_swap is true, the meaning of 
    ! is inverted.

                                                    *:TSessionBrowse*
TSessionBrowse[!]
    With !, buffers not registered in the session will be deleted if 
    |g:tsession_swap| is false. If g:tsession_swap is true, the meaning of 
    ! is inverted.


